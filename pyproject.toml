[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tmmoscow"
version = "0.1.0"
description = "Telegram bot to get updates from tmmoscow.ru"
license = "GPL-3.0-or-later"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    { name = "ZUB3C", email = "pitzubarev@yandex.ru" },
]
keywords = [
    "tmmoscow",
]
classifiers = [
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: AsyncIO",
    "Framework :: aiohttp",
    "Typing :: Typed",
]
dependencies = [
    "sqlalchemy>=2.0.25",
    "asyncpg>=0.29.0",
    "alembic>=1.13.1",
    "aiohttp>=3.9.5",
    "selectolax>=0.3.21",
    "aiogram>=3.3.0",
    "aiogram-i18n>=1.3.4",
    "fluent-runtime>=0.4.0",
    "pydantic-settings>=2.1.0",
    "yarl>=1.9.4",
    "loguru>=0.7.2",
]

[tool.rye]
managed = true
universal = true
dev-dependencies = [
    "mypy>=1.11.2",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
target-version = "py311"
line-length = 99
exclude = [
    ".git",
    ".venv",
    ".idea",
    ".tests",
    ".cache",
    "build",
    "dist",
    "scripts",
]

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "N", # pep8-naming
    "S", # flake8-bandit
    "B", # flake8-bugbear
    "G", # flake8-logging-format
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "PD", # pandas-vet
    "PLC", # pylint conventions
    "PLE", # pylint errors
    "SIM", # flake8-simplify
    "RET", # flake8-return
    "YTT", # flake8-2020
    #    "DTZ", # flake8-datetimez
    "RUF", # ruff-specific rules
    "TCH", # flake8-type-checking
    "PTH", # flake8-use-pathlib
    "ASYNC", # flake8-async
]
ignore = [
    "PTH123", # `open()` should be replaced by `Path.open()`
    "PD901", # Avoid using the generic variable name df for DataFrames
    "RUF003", # Ambiguous unicode character comment
    "RUF001", # String contains ambiguous `Ð’` (CYRILLIC CAPITAL LETTER VE)
]

[tool.ruff.lint.isort]
known-third-party = ["tmmoscow_api"]

[tool.mypy]
strict = true
plugins = [
    "sqlalchemy.ext.mypy.plugin",
    "pydantic.mypy"
]
exclude = [
    ".git",
    ".venv",
    ".idea",
    ".tests",
    ".cache",
    "build",
    "dist",
    "scripts",
]

[[tool.mypy.overrides]]
module = ["bot.handlers.*"]
strict_optional = false
warn_return_any = false
